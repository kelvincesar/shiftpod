version: "3"

vars:
  PROJECT_NAME: shiftpod
  BINARY_NAME: containerd-shim-shiftpod-v2
  BUILD_DIR: build
  CMD_DIR: cmd/shim
  PROTO_DIR: proto
  PROTO_OUT_DIR: proto

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task --list

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf {{.BUILD_DIR}}
      - go clean -cache

  deps:
    desc: Download and tidy dependencies
    cmds:
      - go mod download
      - go mod tidy

  proto:gen:
    desc: Generate protobuf files for Go
    cmds:
      - mkdir -p {{.PROTO_OUT_DIR}}
      - protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative {{.PROTO_DIR}}/manager.proto
    generates:
      - "{{.PROTO_OUT_DIR}}/manager.pb.go"
      - "{{.PROTO_OUT_DIR}}/manager_grpc.pb.go"
    sources:
      - "{{.PROTO_DIR}}/manager.proto"

  manager:build:
    desc: Build the Rust manager service
    dir: manager
    cmds:
      - cargo build --release
    generates:
      - "target/release/manager"

  manager:proto:
    desc: Ensure manager proto is regenerated
    dir: manager
    cmds:
      - cargo build

  fmt:
    desc: Format Go code
    cmds:
      - go fmt ./...

  lint:
    desc: Run linter
    cmds:
      - golangci-lint run

  vet:
    desc: Run go vet
    cmds:
      - go vet ./...

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  build:
    desc: Build the containerd shim binary
    deps: [deps, proto:gen]
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -o {{.BUILD_DIR}}/{{.BINARY_NAME}} ./{{.CMD_DIR}}
    generates:
      - "{{.BUILD_DIR}}/{{.BINARY_NAME}}"

  build:all:
    desc: Build both shim and manager
    deps: [build, manager:build]

  check:
    desc: Run all checks (fmt, vet, lint, test)
    deps: [proto:gen, fmt, vet, lint, test]

  manager:docker:
    desc: Build manager Docker image
    deps: [manager:build]
    cmds:
      - docker build -f manager/Dockerfile -t shiftpod/manager:latest .

  k3d:build:
    desc: Build custom image to run k3s with criu
    deps: [build]
    cmds:
      - docker build -f ./k3s/k3s-criu.Dockerfile -t shiftpod/k3s-criu:1.32.3 .

  k3d:import:
    desc: Import manager image into k3d cluster
    deps: [manager:docker]
    cmds:
      - k3d image import shiftpod/manager:latest -c shift-cluster

  k3d:create:
    desc: Create K3D cluster
    cmds:
      - |
        k3d cluster create shift-cluster \
        --image shiftpod/k3s-criu:1.32.3 \
        --servers 1 --agents 1 \

  k3d:runtimeclass:
    desc: Create runtimeclass for k3d cluster
    cmds:
      - kubectl apply -f ./k3s/runtimeclass.yaml
      - kubectl get runtimeclass

  k3d:deploy:manager:
    desc: Deploy manager to k3d cluster
    deps: [k3d:import]
    cmds:
      - kubectl apply -k k3s/manager/
      - kubectl rollout status daemonset/shiftpod-manager -n kube-system

  k3d:logs:manager:
    desc: Get manager logs from k3d
    cmds:
      - kubectl logs daemonset/shiftpod-manager -n kube-system --all-containers=true --tail=50

  k3d:test_1:
    desc: Apply pod test 1
    cmds:
      - kubectl apply -f ./k3s/testpod.yaml

  k3d:events:
    desc: Get cluster events
    cmds:
      - kubectl get events --sort-by=.metadata.creationTimestamp

  k3d:kubeconfig:
    desc: Get kubeconfig for k3d cluster
    cmds:
      - k3d kubeconfig get shift-cluster > kube.config
      - chmod 600 kube.config
      - echo "export KUBECONFIG={{.PWD}}/kube.config"

  k3d:terminal:
    desc: Get terminal for k3d cluster
    cmds:
      - docker exec -it k3d-shift-cluster-server-0 /bin/sh

  k3d:pods:
    desc: Get pods for k3d cluster
    cmds:
      - kubectl get pods -o wide

  shim:logs:
    desc: Get shim logs from k3d
    cmds:
      - docker exec k3d-shift-cluster-agent-0 cat /tmp/shiftpod.log

  counter:build:
    desc: Build counter example and deploy to k3d
    cmds:
      - docker build -f ./k3s/counter/Dockerfile.counter -t shiftpod/counter:latest .
      - k3d image import shiftpod/counter:latest -c shift-cluster
      - kubectl apply -f ./k3s/counter/deployment.yaml
      - kubectl rollout restart deployment counter

  counter:logs:
    desc: Get counter logs from k3d
    cmds:
      - kubectl logs deploy/counter --all-containers=true

  counter:delete:
    desc: Delete counter example from k3d
    cmds:
      - kubectl delete deployment counter

  test:integration:
    desc: Run comprehensive integration tests
    deps: [k3d:setup:full]
    cmds:
      - ./test-integration.sh

  test:integration:checkpoint:
    desc: Test checkpoint creation only
    deps: [k3d:setup:full]
    cmds:
      - ./test-integration.sh checkpoint

  test:integration:restore:
    desc: Test checkpoint restoration only
    deps: [k3d:setup:full]
    cmds:
      - ./test-integration.sh restore

  test:integration:migrate:
    desc: Test cross-node migration only
    deps: [k3d:setup:full]
    cmds:
      - ./test-integration.sh migrate

  test:integration:cleanup:
    desc: Clean up integration test resources
    cmds:
      - ./test-integration.sh cleanup

  test:integration:summary:
    desc: Show integration test summary
    cmds:
      - ./test-integration.sh summary

  k3d:restart:
    desc: Restart k3d cluster to use updated shim
    cmds:
      - k3d cluster stop shift-cluster
      - k3d cluster start shift-cluster
      - echo "Waiting for cluster to be ready..."
      - kubectl wait --for=condition=ready nodes --all --timeout=120s

  k3d:setup:full:
    desc: Full k3d cluster setup with manager
    deps: [k3d:build, k3d:restart, k3d:runtimeclass, k3d:deploy:manager]
    cmds:
      - echo "K3d cluster setup complete with shiftpod manager"
      - kubectl get nodes
      - kubectl get pods -n kube-system -l app=shiftpod-manager
      - echo "Waiting for manager to be ready..."
      - kubectl wait --for=condition=ready pod -l app=shiftpod-manager -n kube-system --timeout=60s
